{"version":3,"sources":["Services/AuthApi.js","Components/SourceLpn.js","Components/Item.js","Components/Decanting.js","App.js","reportWebVitals.js","index.js"],"names":["AuthApi","React","createContext","SourceLpn","props","onLodnumStateChange","useState","errorState","errorText","onChange","pristine","touched","value","lodnumState","setLodnumState","lodnumInputRef","useRef","Auth","useContext","validateSourceLpn","srclpn","axios","get","headers","withCredentials","credentials","then","response","console","log","data","lodnum","updatedState","catch","error","Cookies","set","status","setAuth","remove","TextField","id","label","style","margin","fullWidth","InputLabelProps","shrink","variant","onBlur","e","target","helperText","required","ref","Item","onItemStateChange","itemDescription","itemImage","untcas","totalUnits","itemState","setItemState","validateItem","item","JSON","stringify","prtnum","item_description","img_src","total_units","Decanting","handleLodnumStateChange","setState","state","lodnumError","handleItemStateChange","itemError","ustcas","Container","Grid","xs","this","container","spacing","Box","m","pt","CardMedia","width","height","component","src","disabled","FormControl","minWidth","InputLabel","Select","labelId","MenuItem","Button","color","size","FormLabel","RadioGroup","row","aria-label","name","FormControlLabel","control","Radio","multiline","Component","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d46cc3c6.chunk.js","sourcesContent":["import React from 'react';\r\nconst AuthApi = React.createContext();\r\nexport default AuthApi;","import React, {useEffect, useRef, useState} from 'react';\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AuthApi from '../Services/AuthApi'\r\nimport Cookies from 'js-cookie';\r\n\r\nfunction SourceLpn (props) {\r\n\r\n    /*const [lodnum, setLodnum] = useState(\"\");\r\n    const [errorState, setErrorState] = useState();\r\n    const [errorText, setErrorText] = useState(\"\");*/\r\n\r\n    const { onLodnumStateChange } = props;\r\n\r\n    const [lodnumState, setLodnumState] = useState({\r\n        errorState: false,\r\n        errorText:\"\",\r\n        onChange: false,\r\n        pristine: true,\r\n        touched: false,\r\n        value: null\r\n      });\r\n    \r\n   const lodnumInputRef = useRef(null);\r\n\r\n  /*  useEffect(() =>{\r\n        console.log(lodnumState.errorState);\r\n        if(lodnumState.errorState){\r\n            console.log(lodnumInputRef);\r\n            lodnumInputRef.current.focus();\r\n        }  \r\n    },[lodnumState.errorState]);*/\r\n\r\n    const Auth = React.useContext(AuthApi);\r\n\r\n    const handleSourceLpnChange = e => {\r\n        validateSourceLpn(e.target.value );\r\n    }\r\n\r\n    const validateSourceLpn = (srclpn) => {\r\n        axios.get('/decanting/ws/cws/tosgGetInventoryIdentifierDetails?srclpn=' + srclpn,{\r\n            headers : {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'Access-Control-Allow-Origin' : 'http://localhost:3000',\r\n                'Access-Control-Allow-Credentials' : true\r\n            },withCredentials: true ,\r\n            credentials: 'include',\r\n        }).then((response) =>{\r\n             console.log(\"8080 response \" + response.data.response.lodnum);\r\n              if(response.data.response.lodnum === srclpn){\r\n               /* setLodnum(response.data.data.lodnum);\r\n                setErrorState(false);\r\n                setErrorText(\"\");*/\r\n\r\n                const updatedState = {\r\n                    ...lodnumState,\r\n                    errorState: false,\r\n                    errorText:\"\",\r\n                    onChange: false,\r\n                    pristine: false,\r\n                    touched: true,\r\n                    value: response.data.response.lodnum\r\n                  };\r\n\r\n                  setLodnumState(updatedState);\r\n                  onLodnumStateChange(updatedState);\r\n    \r\n                }else{\r\n                    /*setLodnum(srclpn);\r\n                    setErrorState(true);\r\n                    setErrorText(\"Invalid Source Pallet LPN\");*/\r\n\r\n                    const updatedState = {\r\n                        ...lodnumState,\r\n                        errorState: true,\r\n                        errorText:\"Invalid Source Pallet LPN\",\r\n                        onChange: true,\r\n                        pristine: false,\r\n                        touched: true,\r\n                        value: srclpn\r\n                      };\r\n\r\n                    setLodnumState(updatedState);\r\n                    onLodnumStateChange(updatedState);\r\n                }\r\n                \r\n                })\r\n            .catch((error) => {\r\n\r\n                debugger;\r\n                if (error.response) {\r\n                   /* setLodnum(srclpn);\r\n                    setErrorState(true);\r\n                    setErrorText(\"Invalid Source Pallet LPN\");*/\r\n\r\n                    const updatedState = {\r\n                        ...lodnumState,\r\n                        errorState: true,\r\n                        errorText:\"Invalid Source Pallet LPN\",\r\n                        onChange: true,\r\n                        pristine: false,\r\n                        touched: true,\r\n                        value: srclpn\r\n                      };\r\n\r\n                      setLodnumState(updatedState);\r\n                      onLodnumStateChange(updatedState);\r\n\r\n                    Cookies.set(\"user\", \"loginfalse\");\r\n                    if(error.response.status===401){\r\n                        Auth.setAuth(false);\r\n                        Cookies.remove(\"user\");\r\n                    }\r\n                  }\r\n                });\r\n\r\n    };\r\n\r\n        return(\r\n            <TextField\r\n                    id=\"srclpn\"\r\n                    label=\"Source Pallet LPN\"\r\n                    style={{ margin: 8 }}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    onBlur={handleSourceLpnChange}\r\n                    error={lodnumState.errorState}\r\n                    helperText={lodnumState.errorText}\r\n                    required\r\n                    ref={lodnumInputRef}\r\n\r\n                />\r\n        )\r\n}\r\n\r\nexport default SourceLpn;","import React, {useEffect, useRef, useState} from 'react';\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AuthApi from '../Services/AuthApi'\r\nimport Cookies from 'js-cookie';\r\n\r\nfunction Item (props) {\r\n\r\n    const { onItemStateChange } = props;\r\n\r\n    const [itemState, setItemState] = useState({\r\n        errorState: false,\r\n        errorText:\"\",\r\n        onChange: false,\r\n        pristine: true,\r\n        touched: false,\r\n        value: null,\r\n        itemDescription: \"\",\r\n        itemImage:\"\",\r\n        untcas:\"\",\r\n        totalUnits:\"\"\r\n      });\r\n\r\n    const Auth = React.useContext(AuthApi);\r\n\r\n\r\n    const handleItemChange =e =>{\r\n        validateItem(e.target.value);\r\n    }\r\n\r\n    const validateItem = (item) =>{\r\n        axios.get('/decanting/ws/cws/tosgGetItemQtyOnLodnum?lodnum=' + props.lodnum +'&prtnum='+ item +'&wh_id=WIAW',{\r\n            headers : {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'Access-Control-Allow-Origin' : 'http://localhost:3000',\r\n                'Access-Control-Allow-Credentials' : true\r\n            },withCredentials: true ,\r\n            credentials: 'include',\r\n        }).then((response) =>{\r\n            console.log(\"response for itemjs\" + JSON.stringify(response.data.response));\r\n              if(response.data.response.prtnum ){\r\n                const updatedState = {\r\n                    ...itemState,\r\n                    errorState: false,\r\n                    errorText:\"\",\r\n                    onChange: false,\r\n                    pristine: false,\r\n                    touched: true,\r\n                    value: response.data.response.prtnum,\r\n                    itemDescription: response.data.response.item_description,\r\n                    itemImage:response.data.response.img_src,\r\n                    untcas : response.data.response.untcas,\r\n                    totalUnits: response.data.response.total_units\r\n                  };\r\n\r\n                  setItemState(updatedState);\r\n                  onItemStateChange(updatedState);\r\n    \r\n                }else{\r\n                    /*setLodnum(srclpn);\r\n                    setErrorState(true);\r\n                    setErrorText(\"Invalid Source Pallet LPN\");*/\r\n                    console.log(\"ERROR ELSE PART\");\r\n                    const updatedState = {\r\n                        ...itemState,\r\n                        errorState: true,\r\n                        errorText:\"Invalid Item\",\r\n                        onChange: true,\r\n                        pristine: false,\r\n                        touched: true,\r\n                        value: item,\r\n                        itemDescription:\"\",\r\n                        untcas:\"\",\r\n                        totalUnits:\"\"\r\n                      };\r\n\r\n                    setItemState(updatedState);\r\n                    onItemStateChange(updatedState);\r\n                }\r\n                \r\n                })\r\n            .catch((error) => {\r\n                console.log(\"ERROR CATCH PART\" + error);\r\n                const updatedState = {\r\n                    ...itemState,\r\n                    errorState: true,\r\n                    errorText:\"Invalid Item\",\r\n                    onChange: true,\r\n                    pristine: false,\r\n                    touched: true,\r\n                    value: item,\r\n                    itemDescription:\"\",\r\n                    untcas:\"\",\r\n                    totalUnits:\"\"\r\n                  };\r\n                \r\n                  setItemState(updatedState);\r\n                  onItemStateChange(updatedState);\r\n\r\n                if (error.response) {\r\n                   /* setLodnum(srclpn);\r\n                    setErrorState(true);\r\n                    setErrorText(\"Invalid Source Pallet LPN\");*/\r\n\r\n                    Cookies.set(\"user\", \"loginfalse\");\r\n                    if(error.response.status===401){\r\n                        Auth.setAuth(false);\r\n                        Cookies.remove(\"user\");\r\n                    }\r\n                  }\r\n                });\r\n\r\n    }\r\n\r\n    return(\r\n        <TextField\r\n        id=\"item\"\r\n        label=\"Item\"\r\n        style={{ margin: 8 }}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        InputLabelProps={{\r\n            shrink: true,\r\n        }}\r\n        variant=\"outlined\"\r\n        required\r\n        onBlur={handleItemChange}\r\n        error={itemState.errorState}\r\n        helperText={itemState.errorText}\r\n\r\n    />\r\n\r\n    );\r\n}\r\n\r\nexport default Item;","import React, {Component} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Container from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport SourceLpn from './SourceLpn';\r\nimport Item from './Item';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport { CardMedia } from '@material-ui/core';\r\n\r\n\r\nclass Decanting extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            lodnum:'',\r\n            lodnumError: false,\r\n            item:'',\r\n            itemError :false,\r\n            itemDescription:'',\r\n            itemImage:'',\r\n            ustcas:'',\r\n            totalUnits:''\r\n        }\r\n    }\r\n\r\n    handleLodnumStateChange =(updatedState) => {\r\n        console.log(\"updatedState: \", updatedState);\r\n        this.setState({\r\n            ...this.state,\r\n            lodnum: updatedState.value,\r\n            lodnumError: updatedState.error    \r\n        });\r\n\r\n        console.log(this.state.lodnum);\r\n    }\r\n\r\n    handleItemStateChange = (updatedState) => {\r\n        console.log(\"updatedState for the ITEM STATE: \", updatedState);\r\n        this.setState({\r\n            ...this.state,\r\n            itemError:updatedState.error,\r\n            item:updatedState.value,\r\n            itemDescription:updatedState.itemDescription,\r\n            itemImage:updatedState.itemImage,\r\n            untcas:updatedState.untcas,\r\n            totalUnits:updatedState.totalUnits  \r\n        });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n        <Container >\r\n            <Grid item xs={10}>\r\n                <SourceLpn onLodnumStateChange={this.handleLodnumStateChange}/>\r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={2}>\r\n                    <Box m={1} pt={1}>\r\n                        \r\n                    <CardMedia width=\"250\" height=\"250\" component='img' src={this.state.itemImage} />\r\n                    </Box>\r\n                </Grid>    \r\n\r\n                <Grid item xs={3}>\r\n                   <Item {...this.state} onItemStateChange={this.handleItemStateChange}/>\r\n\r\n                    <TextField\r\n                        id=\"item-description\"\r\n                        label=\"Item Description\"\r\n                        style={{ margin: 8}}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        value={this.state.itemDescription}\r\n                        disabled\r\n                    />\r\n\r\n                    <TextField\r\n                        id=\"pick-zone\"\r\n                        label=\"Designated Pick Zone\"\r\n                        style={{ margin: 8 }}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                    />\r\n\r\n                    <TextField\r\n                        id=\"wrapping-type\"\r\n                        label=\"Wrapping Type\"\r\n                        style={{ margin: 8 }}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                    />\r\n\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <TextField\r\n                        id=\"total-units\"\r\n                        label=\"Total Units\"\r\n                        style={{ margin: 8 }}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        value={this.state.totalUnits}\r\n                        disabled\r\n                    />\r\n\r\n                    <TextField\r\n                        id=\"num-of-lbls\"\r\n                        label=\"Number of Labels To Print\"\r\n                        style={{ margin: 8 }}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                    />\r\n\r\n    \r\n\r\n                    <FormControl variant=\"outlined\" style={{margin:8, minWidth: 270}}>\r\n                    <InputLabel id=\"suggested-tote-label\">Suggested Tote</InputLabel>\r\n                        <Select\r\n                        labelId=\"suggested-tote-label\"\r\n                        id=\"suggested-tote\"\r\n                        label=\"Suggested Tote*\"\r\n                        required\r\n                        >\r\n                        <MenuItem value=\"\">\r\n                            <em>None</em>\r\n                        </MenuItem>\r\n                        <MenuItem value={10}>AutoStore Tote</MenuItem>\r\n                        <MenuItem value={20}>Regular Tote</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n       \r\n\r\n                    <TextField\r\n                        id=\"actual-tote-wt\"\r\n                        label=\"Actual Tote Weight\"\r\n                        style={{ margin: 8 }}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                    />\r\n                </Grid>\r\n                \r\n                <Grid item xs={2}>\r\n                    <TextField\r\n                        id=\"untcas\"\r\n                        label=\"Units Per Case\"\r\n                        style={{ margin: 8 }}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        value={this.state.untcas}\r\n                        disabled\r\n                    />\r\n        \r\n                    <Box m={1} pt={1}>\r\n                        <Button variant=\"outlined\" color=\"primary\" size=\"large\" >\r\n                            Print\r\n                        </Button>\r\n                    </Box>\r\n                    <Box m={1.7}>\r\n\r\n                    </Box>\r\n\r\n                    <TextField\r\n                        id=\"units-per-tote\"\r\n                        label=\"Suggested Units Per Tote\"\r\n                        style={{ margin: 8 }}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                    />\r\n\r\n                    <FormLabel component=\"legend\">Tote Level</FormLabel>\r\n                    <RadioGroup row aria-label=\"Tote Level\" name=\"tote-level\">\r\n                        <FormControlLabel value=\"0\" control={<Radio color=\"primary\" />} label=\"Partial\" />\r\n                        <FormControlLabel value=\"1\" control={<Radio color=\"primary\" />} label=\"Full\" />\r\n                    </RadioGroup>\r\n    \r\n                </Grid>          \r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={8}>\r\n                <TextField \r\n                        id=\"destination-lpn\"\r\n                        label=\"Destination Pallet LPN\"\r\n                        style={{ margin: 8 }}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        required\r\n                    />\r\n\r\n                <TextField \r\n                        id=\"decanting-instructions\"\r\n                        label=\"Decanting Instructions\"\r\n                        style={{ margin: 8 }}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                    />\r\n\r\n                <TextField \r\n                        id=\"special-instructions\"\r\n                        label=\"Special Instructions\"\r\n                        style={{ margin: 8 }}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <Box m={1} pt={1}>\r\n                        <Button variant=\"outlined\" color=\"primary\" size=\"large\" >\r\n                            Confirm\r\n                        </Button>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n        )\r\n    }\r\n  }\r\n\r\n  export default Decanting;\r\n\r\n","import './App.css';\nimport Decanting from './Components/Decanting'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <Decanting />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}