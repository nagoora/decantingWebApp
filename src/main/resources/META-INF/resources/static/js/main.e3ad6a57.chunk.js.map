{"version":3,"sources":["Services/AuthApi.js","Components/SourceLpn.js","Components/Item.js","Components/PutawayTote.js","Components/Modal.js","Components/LoadingIndicator.js","Components/DialogModal.js","Components/SuccessModal.js","Components/ErrorModal.js","Components/ConfirmBtn.js","Components/SuggestedMax.js","Components/DestinationLpn.js","Components/ToteLevel.js","Components/LogoutBtn.js","Components/ExceptionDialog.js","Components/Decanting.js","Components/SignIn.js","App.js","reportWebVitals.js","index.js"],"names":["AuthApi","React","createContext","SourceLpn","memo","useGlobalState","state","dispatch","validateSourceLpn","srclpn","trackPromise","axios","get","headers","localStorage","getItem","withCredentials","credentials","then","response","console","log","JSON","stringify","data","lodnum","lodnumError","catch","error","TextField","id","label","style","margin","fullWidth","InputLabelProps","shrink","variant","onBlur","e","target","value","helperText","required","Item","handleItemChange","validateItem","item","itemError","itemDescription","itemImage","ustcas","totalUnits","destinationZone","suggestedTote","suggestedToteMax","assetWgt","wrappingType","decantingInstructions","specialInstructions","prtnum","item_description","img_src","untcas","total_units","movement_zone","tote","suggested_max_units","asset_wgt","wrapping_type","decanting_instructions","special_instructions","parseInt","suggestedToteMaxError","suggestedToteMaxErrorMsg","onChange","PutawayTote","useState","allPutawayTotes","setAllPutawayTotes","setSelectedTote","useEffect","putawayTote","FormControl","minWidth","InputLabel","Select","labelId","name","map","MenuItem","lngdsc","asset_typ","Modal","props","className","classes","transform","show","opacity","children","LoadingIndicator","usePromiseTracker","delay","promiseInProgress","position","top","left","type","color","height","width","AlertDialog","handleClose","modalDialogOpen","getSuccessCountTimeout","setTimeout","successModal","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","destinationLpn","DialogActions","Button","onClick","post","destinationLpnError","destinationLpnErrorMsg","toteLevel","errorModal","errorMessage","autoFocus","useStyles","makeStyles","theme","root","marginTop","spacing","SuccessModal","BackdropComponent","Backdrop","BackdropProps","timeout","Alert","severity","AlertTitle","ErrorModal","ConfirmBtn","Box","sx","m","pt","size","SuggestedMax","textInput","useRef","handleSuggestedMaxChange","current","focus","inputRef","DestinationLpn","handleDestinationLpnChange","multiline","ToteLevel","FormLabel","component","RadioGroup","row","aria-label","FormControlLabel","control","Radio","LogoutBtn","clear","Cookies","remove","window","location","reload","emails","avatar","backgroundColor","blue","ExceptionDialog","selectedValue","List","email","ListItem","button","ListItemAvatar","Avatar","ListItemText","primary","ExceptionDialogBtn","setOpen","setSelectedValue","Typography","marginRight","Decanting","Container","Grid","xs","tabIndex","container","CardMedia","src","disabled","withStyles","SignIn","userName","setUserName","password","setPassWord","Auth","useContext","handleSubmit","preventDefault","set","setItem","setAuth","maxWidth","onSubmit","initialGlobalState","warehouseId","GlobalStateContext","DispatchStateContext","undefined","GlobalStateProvider","newValue","Provider","App","auth","Routes","exact","path","ProtectedRoute","Component","rest","render","to","ProtectedLogin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3ad6a57.chunk.js","sourcesContent":["import React from 'react';\r\nconst AuthApi = React.createContext();\r\nexport default AuthApi;","import React, {useEffect, useRef, useState} from 'react';\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AuthApi from '../Services/AuthApi'\r\nimport Cookies from 'js-cookie';\r\nimport { trackPromise } from 'react-promise-tracker'\r\nimport {useGlobalState} from '../App';\r\n\r\n\r\nconst SourceLpn = React.memo(() => {\r\n\r\n    const [state, dispatch] = useGlobalState();\r\n\r\n    const handleSourceLpnChange = e => {\r\n        validateSourceLpn(e.target.value );\r\n       \r\n    }\r\n\r\n    const validateSourceLpn = (srclpn) => {\r\n        trackPromise(axios.get('/decanting/ws/cws/tosgGetInventoryIdentifierDetails?srclpn=' + srclpn,{\r\n            headers : {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'Access-Control-Allow-Origin' : 'http://localhost:3000',\r\n                'Access-Control-Allow-Credentials' : true,\r\n                'username' : localStorage.getItem(\"userName\"),\r\n                'password' : localStorage.getItem(\"password\")\r\n            },withCredentials: true ,\r\n            credentials: 'include',\r\n        }).then((response) =>{\r\n             console.log(\"8080 response \" +JSON.stringify(response.data));\r\n              if(response.data.response.lodnum === srclpn){\r\n\r\n                dispatch({ lodnum: response.data.response.lodnum, lodnumError:false })\r\n    \r\n                }else{\r\n                    dispatch({ lodnum:srclpn, lodnumError:true })\r\n                }\r\n                \r\n                })\r\n            .catch((error) => {\r\n\r\n                    console.log(\"error \" , error)\r\n                    dispatch({ lodnum:srclpn, lodnumError:true })\r\n\r\n                }))\r\n        \r\n\r\n    };\r\n\r\n    return(\r\n        <TextField\r\n                id=\"srclpn\"\r\n                label=\"Source Pallet LPN\"\r\n                style={{ margin: 8 }}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                variant=\"outlined\"\r\n                onBlur={handleSourceLpnChange}\r\n                error={state.lodnumError}\r\n                helperText={state.lodnumError ? 'Invalid Source Pallet LPN' : ''}\r\n                required\r\n\r\n\r\n            />\r\n    )\r\n\r\n\r\n})\r\n\r\nexport default SourceLpn;","import React, {useEffect, useRef, useState} from 'react';\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AuthApi from '../Services/AuthApi'\r\nimport Cookies from 'js-cookie';\r\nimport { trackPromise } from 'react-promise-tracker'\r\nimport {useGlobalState} from '../App';\r\n\r\nconst Item = React.memo(() => {\r\n\r\n    const [state, dispatch] = useGlobalState();\r\n\r\n\r\n    const handleItemChange =e =>{\r\n        if(e.target.value!=\"\"){\r\n          validateItem(e.target.value);\r\n          \r\n        }else{\r\n            dispatch(\r\n                {\r\n                    item:e.target.value,\r\n                    itemError :true,\r\n                    itemDescription:'',\r\n                    itemImage:'',\r\n                    ustcas:'',\r\n                    totalUnits:'',\r\n                    destinationZone:'',\r\n                    suggestedTote : '',\r\n                    suggestedToteMax:'',\r\n                    assetWgt: '',\r\n                    wrappingType: '',\r\n                    decantingInstructions:'',\r\n                    specialInstructions: ''\r\n              }\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    const validateItem = (item) =>{\r\n        trackPromise(\r\n          axios.get('/decanting/ws/cws/tosgGetItemQtyOnLodnum?lodnum=' + state.lodnum +'&prtnum='+ item +'&wh_id=WIAW',{\r\n            headers : {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'Access-Control-Allow-Origin' : 'http://localhost:3000',\r\n                'Access-Control-Allow-Credentials' : true,\r\n                'username' : localStorage.getItem(\"userName\"),\r\n                'password' : localStorage.getItem(\"password\")\r\n            },withCredentials: true ,\r\n            credentials: 'include',\r\n        }).then((response) =>{\r\n              if(response.data.response.prtnum ){\r\n                console.log(\"response \" , response.data.response)\r\n                dispatch(\r\n                    {  \r\n                        item: response.data.response.prtnum,\r\n                        itemError :false,\r\n                        itemDescription: response.data.response.item_description,\r\n                        itemImage:response.data.response.img_src,\r\n                        untcas : response.data.response.untcas,\r\n                        totalUnits: response.data.response.total_units,\r\n                        destinationZone: response.data.response.movement_zone,\r\n                        suggestedTote: response.data.response.tote,\r\n                        suggestedToteMax: response.data.response.suggested_max_units,\r\n                        assetWgt: response.data.response.asset_wgt,\r\n                        wrappingType:response.data.response.wrapping_type,\r\n                        decantingInstructions: response.data.response.decanting_instructions,\r\n                        specialInstructions: response.data.response.special_instructions\r\n                    }\r\n                )\r\n\r\n                if(parseInt(response.data.response.suggested_max_units) > parseInt(response.data.response.total_units)){\r\n                    console.log(\"state.totalUnits \", state.totalUnits)\r\n                    console.log(\"state.suggestedToteMax \", state.suggestedToteMax)\r\n                    dispatch({ suggestedToteMaxError:true, suggestedToteMaxErrorMsg: \"Cannot move qty greater than Total Units\" })\r\n                }\r\n    \r\n                }else{\r\n                    dispatch(\r\n                        {\r\n                            item:item,\r\n                            itemError :true,\r\n                            itemDescription:'',\r\n                            itemImage:'',\r\n                            ustcas:'',\r\n                            totalUnits:'',\r\n                            destinationZone:'',\r\n                            suggestedTote : '',\r\n                            suggestedToteMax:'',\r\n                            assetWgt: '',\r\n                            wrappingType: '',\r\n                            decantingInstructions:'',\r\n                            specialInstructions: ''\r\n                      }\r\n                    )\r\n                }\r\n                \r\n                })\r\n            .catch((error) => {\r\n                console.log(\"ERROR CATCH PART\" + error);\r\n                dispatch(\r\n                    {\r\n                        item:item,\r\n                        itemError :true,\r\n                        itemDescription:'',\r\n                        itemImage:'',\r\n                        ustcas:'',\r\n                        totalUnits:'',\r\n                        destinationZone:'',\r\n                        suggestedTote : '',\r\n                        suggestedToteMax:'',\r\n                        assetWgt: '',\r\n                        wrappingType: '',\r\n                        decantingInstructions:'',\r\n                        specialInstructions: ''\r\n                  }\r\n                )\r\n                })\r\n        )\r\n  \r\n      }\r\n\r\n    return(\r\n        <TextField\r\n        id=\"item\"\r\n        label=\"Item\"\r\n        style={{ margin: 8 }}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        InputLabelProps={{\r\n            shrink: true,\r\n        }}\r\n        variant=\"outlined\"\r\n        required\r\n        onBlur={handleItemChange}\r\n        error={state.itemError}\r\n        helperText={state.itemError ? 'Invalid Item' : ''}\r\n        value={state.item}\r\n        onChange={handleItemChange}\r\n\r\n    />\r\n\r\n    );\r\n\r\n})\r\n\r\nexport default Item;","import React, {useState, createRef, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport {useGlobalState} from '../App';\r\n\r\n\r\nconst PutawayTote = React.memo(() => {\r\n\r\n  const [allPutawayTotes, setAllPutawayTotes] = useState([]);\r\n  const [selectedTote, setSelectedTote] = useState(\"\");\r\n  const [state, dispatch] = useGlobalState();\r\n\r\n  useEffect(() =>{\r\n    console.log(\" useEffect of PutawayTote gets called\")\r\n    axios.get('/decanting/ws/cws/tosgListPutawayTotes?wh_id=WIAW' , {\r\n      headers : {\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n          'Access-Control-Allow-Origin' : 'http://localhost:3000',\r\n          'Access-Control-Allow-Credentials' : true,\r\n          'username' : localStorage.getItem(\"userName\"),\r\n          'password' : localStorage.getItem(\"password\")\r\n      },withCredentials: true ,\r\n      credentials: 'include',\r\n  }).then((response) => {\r\n      setAllPutawayTotes(response.data.putawayTote);\r\n\r\n    })\r\n},[]);\r\n\r\n \r\n  const handelPutatwayToteChange = (e) => {\r\n\r\n    dispatch({ suggestedTote: e.target.value});\r\n    setSelectedTote(e.target.value);\r\n    console.log(\"handelPutatwayToteChange \" , e.target)\r\n\r\n  }\r\n        return (\r\n            <FormControl variant=\"outlined\" style={{margin:8, minWidth: 270}}>\r\n            <InputLabel id=\"suggested-tote-label\">Suggested Tote</InputLabel>\r\n                <Select\r\n                labelId=\"suggested-tote-label\"\r\n                id=\"suggested-tote\"\r\n                name=\"suggestedTote\"\r\n                label=\"Suggested Tote*\"\r\n                onChange={handelPutatwayToteChange}\r\n                value={state.suggestedTote ? state.suggestedTote : \"\"}\r\n                >\r\n                  {allPutawayTotes.map(tote => {\r\n                      return(\r\n                        <MenuItem key={tote.asset_typ} value={tote.lngdsc}> {tote.lngdsc} </MenuItem>\r\n                      )\r\n                  })\r\n\r\n                  }\r\n                </Select>\r\n            </FormControl>\r\n        );\r\n\r\n});\r\n\r\nexport default PutawayTote;\r\n\r\n","import React, {useState} from 'react';\r\nimport classes from '../Styling/modal.css';\r\n\r\nconst Modal = props => {\r\n\r\n    const [modalState, setModalState] = useState();\r\n\r\n    const modalHandler = (e) => {\r\n        e.preventDefault(); //i added this to prevent the default behavior\r\n        this.setState({\r\n          modalToggle: true\r\n        })\r\n      }\r\n\r\n    return (\r\n        <div className={classes.Modal} style={{\r\n            transform:props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n            opacity : props.show ? 1 : 0\r\n        }}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Modal;","import React from 'react';\r\nimport { usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loader from 'react-loader-spinner'\r\nimport Modal from './Modal';\r\n\r\nfunction LoadingIndicator (){\r\n\r\n  const { promiseInProgress } = usePromiseTracker({delay:500});\r\n\r\n  return(\r\n    promiseInProgress && (\r\n      <div\r\n        style={{position: \"fixed\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\"\r\n        }}\r\n      >\r\n      <Modal show=\"true\">\r\n         <Loader type=\"ThreeDots\" color=\"#6495ED\" height=\"100\" width=\"100\" />    \r\n      </Modal>\r\n        \r\n      </div>)\r\n    \r\n  );\r\n}\r\n\r\nexport default LoadingIndicator;","import React from 'react';\r\nimport axios from 'axios';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {useGlobalState} from '../App';\r\nimport { trackPromise } from 'react-promise-tracker'\r\n\r\n\r\nexport default function AlertDialog() {\r\n \r\n  const [state, dispatch] = useGlobalState();\r\n\r\n  const handleClose = () => {\r\n    dispatch({modalDialogOpen: false})\r\n  };\r\n\r\n  const handleConfirmMoveInventory = () => {\r\n    trackPromise(axios.post(\"/decanting/moveInventory\", state, {\r\n      headers : {\r\n          'username' : localStorage.getItem(\"userName\"),\r\n          'password' : localStorage.getItem(\"password\")\r\n      },withCredentials: true ,\r\n      credentials: 'include',\r\n  })\r\n    .then((response) =>{\r\n        console.log(\"Request POSTED \", JSON.stringify(response.data))\r\n        if(response.data === \"success\"){\r\n            dispatch(\r\n                {   lodnumError: false,\r\n                    item:'',\r\n                    itemError :false,\r\n                    itemDescription:'',\r\n                    itemImage:'',\r\n                    untcas:'',\r\n                    totalUnits:'',\r\n                    destinationZone:'',\r\n                    suggestedTote:'',\r\n                    suggestedToteMax:'',\r\n                    suggestedToteMaxError: false,\r\n                    suggestedToteMaxErrorMsg:'',\r\n                    assetWgt:'',\r\n                    wrappingType:'',\r\n                    decantingInstructions:'',\r\n                    specialInstructions:'',\r\n                    modalDialogOpen: false,\r\n                    destinationLpn:'',\r\n                    destinationLpnError:false,\r\n                    destinationLpnErrorMsg:'',\r\n                    toteLevel:''\r\n                }\r\n            )\r\n            dispatch({modalDialogOpen: false})\r\n            dispatch({successModal: true})\r\n            getSuccessCountTimeout();\r\n        }else{\r\n            dispatch({modalDialogOpen: false})\r\n            dispatch({errorModal: true, errorMessage: JSON.stringify(response.data)})\r\n        }\r\n    }))\r\n\r\n  }\r\n\r\n  const getSuccessCountTimeout = () => {\r\n    setTimeout(() => {\r\n        dispatch({successModal: false})\r\n      }, 3000);\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={state.modalDialogOpen}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Move Inventory\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Are you sure you want to move {state.suggestedToteMax} into {state.destinationLpn} ?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Back\r\n          </Button>\r\n          <Button onClick={handleConfirmMoveInventory} color=\"primary\" autoFocus>\r\n            Confirm\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from  '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {useGlobalState} from '../App';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n\r\n export default function SuccessModal() {\r\n  const [state, dispatch] = useGlobalState();\r\n  const classes = useStyles();\r\n\r\n  const handleClose = () => {\r\n    dispatch({successModal:false})\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    <Dialog\r\n      open={state.successModal}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n      BackdropComponent={Backdrop}\r\n      BackdropProps={{\r\n                    timeout: 5,\r\n                }}\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\"></DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n\r\n        <Alert variant=\"filled\" severity=\"success\">\r\n            <AlertTitle><strong>Success</strong></AlertTitle>\r\n            <strong>Item has been decanted successfully !</strong>\r\n        </Alert>\r\n\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        \r\n        \r\n      </DialogActions>\r\n    </Dialog>\r\n  </div>\r\n  );\r\n}","import React, {useEffect} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from  '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {useGlobalState} from '../App';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n\r\n export default function ErrorModal() {\r\n  const [state, dispatch] = useGlobalState();\r\n  const classes = useStyles();\r\n\r\n  const handleClose = () => {\r\n    dispatch({errorModal:false, errorMessage:\"\"})\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    <Dialog\r\n      open={state.errorModal}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\"></DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText id=\"alert-dialog-description\">\r\n\r\n        <Alert variant=\"filled\" severity=\"error\">\r\n            <AlertTitle>Error</AlertTitle>\r\n            <strong>{state.errorMessage}</strong>\r\n        </Alert>\r\n\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n            Ok\r\n          </Button>\r\n        \r\n      </DialogActions>\r\n    </Dialog>\r\n  </div>\r\n  );\r\n}","import React, {useEffect, useRef, useState} from 'react';\r\nimport axios from 'axios';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport {useGlobalState} from '../App';\r\nimport AlertDialog from './DialogModal';\r\nimport SuccessModal from './SuccessModal';\r\nimport ErrorModal from './ErrorModal';\r\n\r\nconst ConfirmBtn = React.memo(() => {\r\n\r\n    const [state, dispatch] = useGlobalState();\r\n\r\n    const handleClickModalOpen = () => {\r\n        if(!state.destinationLpn){\r\n            dispatch({destinationLpnError: true, destinationLpnErrorMsg: \"Destination LPN required\"})\r\n        }else{\r\n            dispatch({destinationLpnError: false, destinationLpnErrorMsg: \"\"})\r\n        }\r\n        if(!state.lodnumError && !state.itemError && !state.suggestedToteMaxError && !state.destinationLpnError){\r\n            dispatch({modalDialogOpen: true})\r\n        }\r\n        \r\n    }\r\n\r\n     return(\r\n        <div>\r\n        <Box sx={{m:1 , pt:1}}>\r\n            <Button variant=\"outlined\" color=\"primary\" size=\"large\" onClick={handleClickModalOpen} >\r\n                Confirm\r\n            </Button>\r\n        </Box>\r\n        <AlertDialog />\r\n        <SuccessModal />\r\n        <ErrorModal />\r\n        </div>\r\n\r\n    );\r\n\r\n})\r\n\r\nexport default ConfirmBtn;","\r\nimport React, {useEffect, useRef} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {useGlobalState} from '../App';\r\n\r\nconst SuggestedMax = React.memo(() => {\r\n\r\n    const [state, dispatch] = useGlobalState();\r\n    let textInput = useRef(null);\r\n\r\n    const handleSuggestedMaxChange =(e) => {\r\n        if(parseInt(e.target.value) > parseInt(state.totalUnits)){\r\n            dispatch({ suggestedToteMaxError:true, suggestedToteMaxErrorMsg: \"Cannot move qty greater than Total Units\" })\r\n        }else{\r\n            dispatch({ suggestedToteMax:e.target.value, suggestedToteMaxError:false, suggestedToteMaxErrorMsg: \"\" })\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() =>{\r\n        if(state.item !== ''){\r\n            textInput.current.focus();\r\n        }\r\n        \r\n    },[state.item]);\r\n\r\n    return(\r\n        <TextField\r\n            id=\"units-per-tote\"\r\n            name=\"unitsPerTote\"\r\n            label=\"Suggested Max Units Per Tote\"\r\n            style={{ margin: 8}}\r\n            fullWidth\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n                shrink: true,\r\n            }}\r\n            required\r\n            variant=\"outlined\"\r\n            value={state.suggestedToteMax}\r\n            error={state.suggestedToteMaxError}\r\n            helperText={state.suggestedToteMaxErrorMsg}\r\n            onChange={handleSuggestedMaxChange}\r\n            onBlur={handleSuggestedMaxChange}\r\n            inputRef={textInput}\r\n            \r\n        />\r\n    )\r\n\r\n});\r\n\r\nexport default SuggestedMax;","import React, {useEffect, useRef, useState} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {useGlobalState} from '../App';\r\n\r\n\r\nconst DestinationLpn = React.memo(() => {\r\n    const [state, dispatch] = useGlobalState();\r\n\r\n    const handleDestinationLpnChange =(e) => {\r\n        if(e.target.value){\r\n            dispatch({destinationLpn:e.target.value, destinationLpnError: false, destinationLpnErrorMsg: \"\"})\r\n        }else{\r\n            dispatch({destinationLpn:\"\", destinationLpnError: true, destinationLpnErrorMsg: \"Destination LPN required\"})\r\n        }\r\n    }\r\n\r\n    return(\r\n        <TextField \r\n        id=\"destination-lpn\"\r\n        label=\"Destination Pallet LPN\"\r\n        style={{ margin: 8 }}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        InputLabelProps={{\r\n            shrink: true,\r\n        }}\r\n        variant=\"outlined\"\r\n        multiline\r\n        required\r\n        value = {state.destinationLpn}\r\n        error={state.destinationLpnError}\r\n        helperText={state.destinationLpnErrorMsg}\r\n        onChange={handleDestinationLpnChange}\r\n        onBlur={handleDestinationLpnChange}\r\n    />\r\n    )\r\n})\r\n\r\nexport default DestinationLpn;\r\n","import React, {useEffect, useRef, useState} from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport {useGlobalState} from '../App';\r\n\r\n\r\nconst ToteLevel = React.memo(() => {\r\n\r\n    const [state, dispatch] = useGlobalState();\r\n    const handleRadioChange = (e) => {\r\n        console.log(\"Tote Level\" , e.target.value);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n        <FormLabel component=\"legend\">Tote Level</FormLabel>\r\n            <RadioGroup row aria-label=\"Tote Level\" name=\"tote-level\" onChange={handleRadioChange}>\r\n                <FormControlLabel value=\"Partial\" control={<Radio color=\"primary\" />} label=\"Partial\" />\r\n                <FormControlLabel value=\"Full\" control={<Radio color=\"primary\" />} label=\"Full\" />\r\n        </RadioGroup>\r\n       </div>\r\n    )\r\n})\r\n\r\nexport default ToteLevel;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport Cookies from 'js-cookie';\r\n\r\nfunction LogoutBtn (){\r\n\r\n\r\n    const handleLogoutFromSession = () => {\r\n        localStorage.clear();\r\n        Cookies.remove(\"user\");\r\n        window.location.reload();\r\n        \r\n    }\r\n\r\n     return(\r\n        <div>\r\n            <Box sx={{m:2 , pt:1}}>\r\n                <Button variant=\"outlined\" color=\"primary\" size=\"large\" onClick={handleLogoutFromSession} >\r\n                    LOGOUT\r\n                </Button>\r\n            </Box>\r\n        </div>\r\n\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default LogoutBtn;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { blue } from '@material-ui/core/colors';\r\n\r\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    backgroundColor: blue[100],\r\n    color: blue[600],\r\n  },\r\n});\r\n\r\nfunction ExceptionDialog(props) {\r\n  const classes = useStyles();\r\n  const { onClose, selectedValue, open } = props;\r\n\r\n  const handleClose = () => {\r\n    onClose(selectedValue);\r\n  };\r\n\r\n  const handleListItemClick = (value) => {\r\n    onClose(value);\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\r\n      <List>\r\n        {emails.map((email) => (\r\n          <ListItem button onClick={() => handleListItemClick(email)} key={email}>\r\n            <ListItemAvatar>\r\n              <Avatar className={classes.avatar}>\r\n                <PersonIcon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary={email} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nExceptionDialog.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  selectedValue: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default function ExceptionDialogBtn() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false);\r\n    setSelectedValue(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"subtitle1\">Selected: {selectedValue}</Typography>\r\n      <br />\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Exception\r\n      </Button>\r\n      <ExceptionDialog selectedValue={selectedValue} open={open} onClose={handleClose} />\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Container from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport SourceLpn from './SourceLpn';\r\nimport Item from './Item';\r\nimport { CardMedia } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport PutawayTote from './PutawayTote';\r\nimport LoadingIndicator from './LoadingIndicator';\r\nimport ConfirmBtn from './ConfirmBtn';\r\nimport {useGlobalState} from '../App';\r\nimport SuggestedMax from './SuggestedMax'\r\nimport DestinationLpn from './DestinationLpn';\r\nimport ToteLevel from './ToteLevel';\r\nimport LogoutBtn from './LogoutBtn';\r\nimport ExceptionDialogBtn from './ExceptionDialog';\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n            marginRight: 8,\r\n            \"& .MuiInputBase-root.Mui-disabled\": {\r\n            color: \"rgba(0, 0, 0, 0.9)\" // (default alpha is 0.38)\r\n            }\r\n        }\r\n    });\r\n\r\nconst Decanting = React.memo(() => {\r\n\r\n    const [state, dispatch] = useGlobalState();\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container >\r\n            <Grid item xs={10}>\r\n                <SourceLpn tabIndex='0'/>\r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={2}>\r\n                    <Box sx={{m:1, pt:1}}>\r\n                        \r\n                    <CardMedia width=\"250\" height=\"250\" component='img' src={state.itemImage} />\r\n                    </Box>\r\n                </Grid>    \r\n\r\n                <Grid item xs={3}>\r\n                   <Item tabIndex='1'/>\r\n\r\n                    <TextField\r\n                        id=\"item-description\"\r\n                        label=\"Item Description\"\r\n                        style={{ margin: 8}}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        value={state.itemDescription}\r\n                        disabled\r\n                    />\r\n\r\n                    <TextField\r\n                        id=\"pick-zone\"\r\n                        label=\"Designated Pick Zone\"\r\n                        style={{ margin: 8 }}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        value={state.destinationZone}\r\n                        disabled\r\n                       \r\n                    />\r\n\r\n                    <TextField\r\n                        id=\"wrapping-type\"\r\n                        label=\"Wrapping Type\"\r\n                        style={{ margin: 8 }}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        disabled\r\n                        value={state.wrappingType}\r\n                       \r\n                    />\r\n\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <TextField\r\n                        id=\"total-units\"\r\n                        label=\"Total Units\"\r\n                        style={{ margin: 8 }}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        value={state.totalUnits}\r\n                        disabled\r\n                       \r\n                    />\r\n\r\n                    <TextField\r\n                        id=\"num-of-lbls\"\r\n                        label=\"Number of Labels To Print\"\r\n                        style={{ margin: 8 }}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        value =\"2\"\r\n                        tabIndex = \"-1\"\r\n                    />\r\n\r\n    \r\n\r\n                    <PutawayTote  />\r\n       \r\n\r\n                    <TextField\r\n                        id=\"actual-tote-wt\"\r\n                        label=\"Actual Tote Weight\"\r\n                        style={{ margin: 8 }}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        value={state.assetWgt}\r\n                        disabled\r\n                       \r\n                    />\r\n                </Grid>\r\n                \r\n                <Grid item xs={2}>\r\n                    <TextField\r\n                        id=\"untcas\"\r\n                        label=\"Units Per Case\"\r\n                        style={{ margin: 8 }}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        value={state.untcas}\r\n                        disabled\r\n                       \r\n                    />\r\n        \r\n                    <Box sx={{m:1, pt:1}} >\r\n                        <Button variant=\"outlined\" color=\"primary\" size=\"large\" >\r\n                            Print\r\n                        </Button>\r\n                    </Box>\r\n                    <Box sx={{m:0.6 , pt:0.1}}>\r\n\r\n                    </Box>\r\n\r\n                    <SuggestedMax />\r\n\r\n                    <ToteLevel />\r\n    \r\n                </Grid>          \r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={8}>\r\n                <LoadingIndicator/>\r\n                <DestinationLpn />\r\n\r\n                <TextField \r\n                        id=\"decanting-instructions\"\r\n                        label=\"Decanting Instructions\"\r\n                        style={{ margin: 8 }}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        value={state.decantingInstructions}\r\n                    />\r\n\r\n                <TextField \r\n                        id=\"special-instructions\"\r\n                        label=\"Special Instructions\"\r\n                        style={{ margin: 8 }}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        value={state.specialInstructions}\r\n                        \r\n                    />\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <ConfirmBtn />\r\n                    <LogoutBtn />\r\n                    <ExceptionDialogBtn />\r\n                </Grid>\r\n                \r\n            </Grid>\r\n        </Container>\r\n        )\r\n    }\r\n\r\n);\r\n\r\n\r\n\r\nexport default withStyles(useStyles)(Decanting); ","import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Container from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button';\r\nimport AuthApi from '../Services/AuthApi'\r\nimport Cookies from 'js-cookie';\r\nimport { useCookies } from 'react-cookie';\r\n\r\nfunction SignIn() {\r\n    const [userName, setUserName] = useState(\"\");\r\n    const [password, setPassWord] = useState(\"\");\r\n\r\n    const handleUserNameChange = (e) => {\r\n        setUserName(e.target.value);\r\n    }\r\n\r\n    const handlePasswordChange = (e) => {\r\n        setPassWord(e.target.value);\r\n    }\r\n\r\n    const Auth = React.useContext(AuthApi);\r\n\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        axios.get(\"/decanting/ws/auth/login?usr_id=\"+ userName+\"&password=\"+password,{\r\n            headers: {\r\n                'Access-Control-Allow-Origin' : '*',\r\n                'Access-Control-Allow-Credentials' : true\r\n            }, withCredentials: true ,\r\n            credentials: 'include'\r\n        })\r\n                .then((response) =>{\r\n                    console.log(response.data);\r\n                    Cookies.set(\"user\", \"loginTrue\");\r\n                    localStorage.setItem(\"userName\", userName);\r\n                    localStorage.setItem(\"password\", password);\r\n                    console.log(\"Authenticated \");\r\n                    Auth.setAuth(true);\r\n                    \r\n            })\r\n            .catch((error) => {\r\n                debugger;\r\n                    console.log({error}) // this will log an empty object with an error property\r\n                    Auth.setAuth(false);\r\n                    Cookies.remove(\"user\");\r\n                });\r\n    }\r\n\r\n        return(\r\n            <Container maxWidth=\"sm\" >\r\n                <form onSubmit={handleSubmit} >\r\n                    <h2 className=\"grey-text text-darken-3\">\r\n                        Sign In\r\n                    </h2>\r\n                    <div >\r\n                        <TextField\r\n                            id=\"userName\"\r\n                            label=\"User Name\"\r\n                            style={{ margin: 8 }}\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            variant=\"outlined\"\r\n                            onBlur={handleUserNameChange}\r\n                        />\r\n                    </div>\r\n                    <div >\r\n                        <TextField\r\n                            id=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            style={{ margin: 8 }}\r\n                            fullWidth\r\n                            margin=\"normal\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            variant=\"outlined\"\r\n                            onBlur={handlePasswordChange}\r\n                        />\r\n                    </div>\r\n                    <div >\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit} style={{ margin: 15 }}>\r\n                            Login\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            </Container>\r\n        )\r\n}\r\n\r\nexport default SignIn;","import './App.css';\nimport Decanting from './Components/Decanting'\nimport * as React from \"react\";\nimport Cookies from 'js-cookie';\nimport {BrowserRouter, Switch, Route, Redirect} from 'react-router-dom';\nimport AuthApi from './Services/AuthApi';\nimport SignIn from './Components/SignIn'\n\nconst initialGlobalState = {\n  warehouseId: 'WIAW',\n  lodnum:'',\n  lodnumError: false,\n  item:'',\n  itemError :false,\n  itemDescription:'',\n  itemImage:'',\n  untcas:'',\n  totalUnits:'',\n  destinationZone:'',\n  suggestedTote:'',\n  suggestedToteMax:'',\n  suggestedToteMaxError: false,\n  suggestedToteMaxErrorMsg:'',\n  assetWgt:'',\n  wrappingType:'',\n  decantingInstructions:'',\n  specialInstructions:'',\n  modalDialogOpen: false,\n  destinationLpn:'',\n  destinationLpnError:false,\n  destinationLpnErrorMsg:'',\n  toteLevel:'',\n  successModal:false,\n  errorModal:false,\n  errorMessage:''\n};\n\nexport const GlobalStateContext = React.createContext(initialGlobalState);\nexport const DispatchStateContext = React.createContext(undefined);\n\n/**\n* Global State provider & hooks\n*/\nexport const GlobalStateProvider = ({ children }) => {\nconst [state, dispatch] = React.useReducer(\n(state, newValue) => ({ ...state, ...newValue }),\ninitialGlobalState\n);\nreturn (\n<GlobalStateContext.Provider value={state}>\n<DispatchStateContext.Provider value={dispatch}>\n{children}\n</DispatchStateContext.Provider>\n</GlobalStateContext.Provider>\n);\n};\n\nexport const useGlobalState = () => [\nReact.useContext(GlobalStateContext),\nReact.useContext(DispatchStateContext)\n];\n\nexport const App = () =>{\n\n  const [auth, setAuth] = React.useState(false);\n  const readCookie =() =>{\n  const user = Cookies.get(\"user\");\n    if(user){\n      setAuth(true);\n    }\n  }\n\n  React.useEffect (()=> {\n    readCookie();\n  }, [])\n\n  return (\n\n    <GlobalStateProvider>\n      <div className=\"App\">\n      <AuthApi.Provider value={{auth, setAuth}}>\n        <BrowserRouter>\n          <Routes />\n        </BrowserRouter>\n      </AuthApi.Provider>\n      </div>\n      </GlobalStateProvider>    \n    \n  );\n}\n\nconst Routes =() => {\n  const Auth = React.useContext(AuthApi);\n  return(\n    <Switch>\n      <ProtectedRoute exact path='/Decanting' auth={Auth.auth} component={Decanting} />\n      <ProtectedLogin path='/Signin' auth={Auth.auth} component={SignIn} />\n  </Switch>\n  )\n}\n\nconst ProtectedRoute = ({auth, component:Component, ...rest}) => {\n  return(\n    <Route \n      {...rest}\n      render ={()=> auth ? (\n        <Component />\n        ) :\n        (\n          <Redirect to='/Signin' />\n        )\n      }\n    />\n  )\n}\n\nconst ProtectedLogin = ({auth, component:Component, ...rest}) => {\n  return(\n    <Route \n      {...rest}\n      render ={()=> !auth ? (\n        <Component />\n        ) :\n        (\n          <Redirect to='/Decanting' />\n        )\n      }\n    />\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}