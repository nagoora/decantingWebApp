{"version":3,"sources":["Components/SourceLpn.js","Components/Item.js","Components/PutawayTote.js","Components/Modal.js","Components/LoadingIndicator.js","Components/Decanting.js","App.js","reportWebVitals.js","index.js"],"names":["SourceLpn","React","memo","useGlobalState","state","dispatch","validateSourceLpn","srclpn","trackPromise","axios","get","headers","withCredentials","credentials","then","response","console","log","JSON","stringify","data","lodnum","lodnumError","catch","error","TextField","id","label","style","margin","fullWidth","InputLabelProps","shrink","variant","onBlur","e","target","value","helperText","required","Item","validateItem","item","prtnum","itemError","itemDescription","item_description","itemImage","img_src","untcas","totalUnits","total_units","destinationZone","movement_zone","suggestedTote","tote","suggestedToteMax","suggested_max_units","assetWgt","asset_wgt","wrappingType","wrapping_type","decantingInstructions","decanting_instructions","specialInstructions","special_instructions","ustcas","PutawayTote","useState","allPutawayTotes","setAllPutawayTotes","setSelectedTote","loading","setLoading","useEffect","putawayTote","map","index","key","asset_typ","lngdsc","FormControl","minWidth","InputLabel","Select","labelId","name","onChange","disabled","undefined","MenuItem","Modal","props","className","classes","transform","show","opacity","children","LoadingIndicator","usePromiseTracker","delay","promiseInProgress","position","top","left","type","color","height","width","Decanting","Container","Grid","xs","tabIndex","container","spacing","Box","sx","m","pt","CardMedia","component","src","Button","size","cursor","FormLabel","RadioGroup","row","aria-label","FormControlLabel","control","Radio","multiline","initialGlobalState","GlobalStateContext","DispatchStateContext","GlobalStateProvider","newValue","Provider","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee030ecc.chunk.js","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AuthApi from '../Services/AuthApi'\r\nimport Cookies from 'js-cookie';\r\nimport { trackPromise } from 'react-promise-tracker'\r\nimport {useGlobalState} from '../App';\r\n\r\n\r\nconst SourceLpn = React.memo(() => {\r\n\r\n    const [state, dispatch] = useGlobalState();\r\n\r\n    const handleSourceLpnChange = e => {\r\n        validateSourceLpn(e.target.value );\r\n       \r\n    }\r\n\r\n    const validateSourceLpn = (srclpn) => {\r\n        trackPromise(axios.get('/decanting/ws/cws/tosgGetInventoryIdentifierDetails?srclpn=' + srclpn,{\r\n            headers : {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'Access-Control-Allow-Origin' : 'http://localhost:3000',\r\n                'Access-Control-Allow-Credentials' : true\r\n            },withCredentials: true ,\r\n            credentials: 'include',\r\n        }).then((response) =>{\r\n             console.log(\"8080 response \" +JSON.stringify(response.data));\r\n              if(response.data.response.lodnum === srclpn){\r\n\r\n                dispatch({ lodnum: response.data.response.lodnum, lodnumError:false })\r\n    \r\n                }else{\r\n                    dispatch({ srclpn, lodnumError:true })\r\n                }\r\n                \r\n                })\r\n            .catch((error) => {\r\n\r\n                    console.log(\"error \" , error)\r\n                    dispatch({ srclpn, lodnumError:true })\r\n\r\n                }))\r\n        \r\n\r\n    };\r\n\r\n    return(\r\n        <TextField\r\n                id=\"srclpn\"\r\n                label=\"Source Pallet LPN\"\r\n                style={{ margin: 8 }}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n                variant=\"outlined\"\r\n                onBlur={handleSourceLpnChange}\r\n                error={state.lodnumError}\r\n                helperText={state.lodnumError ? 'Invalid Source Pallet LPN' : ''}\r\n                required\r\n\r\n            />\r\n    )\r\n\r\n\r\n})\r\n\r\nexport default SourceLpn;","import React, {useEffect, useRef, useState} from 'react';\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AuthApi from '../Services/AuthApi'\r\nimport Cookies from 'js-cookie';\r\nimport { trackPromise } from 'react-promise-tracker'\r\nimport {useGlobalState} from '../App';\r\n\r\nconst Item = React.memo(() => {\r\n\r\n    const [state, dispatch] = useGlobalState();\r\n\r\n\r\n    const handleItemChange =e =>{\r\n        if(e.target.value!=\"\"){\r\n          validateItem(e.target.value);\r\n        }\r\n    }\r\n\r\n\r\n    const validateItem = (item) =>{\r\n        trackPromise(\r\n          axios.get('/decanting/ws/cws/tosgGetItemQtyOnLodnum?lodnum=' + state.lodnum +'&prtnum='+ item +'&wh_id=WIAW',{\r\n            headers : {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'Access-Control-Allow-Origin' : 'http://localhost:3000',\r\n                'Access-Control-Allow-Credentials' : true\r\n            },withCredentials: true ,\r\n            credentials: 'include',\r\n        }).then((response) =>{\r\n              if(response.data.response.prtnum ){\r\n                console.log(\"response \" , response.data.response)\r\n                dispatch(\r\n                    {  \r\n                        item: response.data.response.prtnum,\r\n                        itemError :false,\r\n                        itemDescription: response.data.response.item_description,\r\n                        itemImage:response.data.response.img_src,\r\n                        untcas : response.data.response.untcas,\r\n                        totalUnits: response.data.response.total_units,\r\n                        destinationZone: response.data.response.movement_zone,\r\n                        suggestedTote: response.data.response.tote,\r\n                        suggestedToteMax: response.data.response.suggested_max_units,\r\n                        assetWgt: response.data.response.asset_wgt,\r\n                        wrappingType:response.data.response.wrapping_type,\r\n                        decantingInstructions: response.data.response.decanting_instructions,\r\n                        specialInstructions: response.data.response.special_instructions\r\n                    }\r\n                )\r\n    \r\n                }else{\r\n                    dispatch(\r\n                        {\r\n                            item:item,\r\n                            itemError :true,\r\n                            itemDescription:'',\r\n                            itemImage:'',\r\n                            ustcas:'',\r\n                            totalUnits:'',\r\n                            destinationZone:'',\r\n                            suggestedTote : '',\r\n                            suggestedToteMax:'',\r\n                            assetWgt: '',\r\n                            wrappingType: '',\r\n                            decantingInstructions:'',\r\n                            specialInstructions: ''\r\n                      }\r\n                    )\r\n                }\r\n                \r\n                })\r\n            .catch((error) => {\r\n                console.log(\"ERROR CATCH PART\" + error);\r\n                dispatch(\r\n                    {\r\n                        item:item,\r\n                        itemError :true,\r\n                        itemDescription:'',\r\n                        itemImage:'',\r\n                        ustcas:'',\r\n                        totalUnits:'',\r\n                        destinationZone:'',\r\n                        suggestedTote : '',\r\n                        suggestedToteMax:'',\r\n                        assetWgt: '',\r\n                        wrappingType: '',\r\n                        decantingInstructions:'',\r\n                        specialInstructions: ''\r\n                  }\r\n                )\r\n                })\r\n        )\r\n  \r\n      }\r\n\r\n    return(\r\n        <TextField\r\n        id=\"item\"\r\n        label=\"Item\"\r\n        style={{ margin: 8 }}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        InputLabelProps={{\r\n            shrink: true,\r\n        }}\r\n        variant=\"outlined\"\r\n        required\r\n        onBlur={handleItemChange}\r\n        error={state.itemError}\r\n        helperText={state.itemError ? 'Invalid Item' : ''}\r\n\r\n    />\r\n\r\n    );\r\n\r\n})\r\n\r\nexport default Item;","import React, {useState, createRef, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport {useGlobalState} from '../App';\r\n\r\n\r\nconst PutawayTote = React.memo(() => {\r\n\r\n  const [allPutawayTotes, setAllPutawayTotes] = useState([]);\r\n  const [selectedTote, setSelectedTote] = useState(\"\");\r\n  const [state, dispatch] = useGlobalState();\r\n  let putawayToteOptions =[];\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() =>{\r\n    console.log(\" useEffect of PutawayTote gets called\")\r\n    axios.get('/decanting/ws/cws/tosgListPutawayTotes?wh_id=WIAW' ,{\r\n      withCredentials: true ,\r\n      credentials: 'include'\r\n    }).then((response) => {\r\n      setAllPutawayTotes(response.data.putawayTote);\r\n      putawayToteOptions = response.data.putawayTote.map(function(tote, index) {\r\n                                                        return {key:tote.asset_typ, value:tote.lngdsc};\r\n                            })\r\n                            setLoading(false);\r\n\r\n    })\r\n},[]);\r\n\r\n \r\n  const handelPutatwayToteChange = (e) => {\r\n\r\n    dispatch({ suggestedTote: e.target.value});\r\n    setSelectedTote(e.target.value);\r\n    console.log(\"handelPutatwayToteChange \" , e.target)\r\n\r\n  }\r\n        return (\r\n            <FormControl variant=\"outlined\" style={{margin:8, minWidth: 270}}>\r\n            <InputLabel id=\"suggested-tote-label\">Suggested Tote</InputLabel>\r\n                <Select\r\n                labelId=\"suggested-tote-label\"\r\n                id=\"suggested-tote\"\r\n                name=\"suggestedTote\"\r\n                label=\"Suggested Tote*\"\r\n                onChange={handelPutatwayToteChange}\r\n                value={state.suggestedTote === null ? \"\" : state.suggestedTote}\r\n                disabled={loading ? true : undefined} \r\n                >\r\n                  {allPutawayTotes.map(tote => {\r\n                      return(\r\n                        <MenuItem key={tote.asset_typ} value={tote.lngdsc}> {tote.lngdsc} </MenuItem>\r\n                      )\r\n                  })\r\n\r\n                  }\r\n                </Select>\r\n            </FormControl>\r\n        );\r\n\r\n});\r\n\r\nexport default PutawayTote;\r\n\r\n","import React, {useState} from 'react';\r\nimport classes from '../Styling/modal.css';\r\n\r\nconst Modal = props => {\r\n\r\n    const [modalState, setModalState] = useState();\r\n\r\n    const modalHandler = (e) => {\r\n        e.preventDefault(); //i added this to prevent the default behavior\r\n        this.setState({\r\n          modalToggle: true\r\n        })\r\n      }\r\n\r\n    return (\r\n        <div className={classes.Modal} style={{\r\n            transform:props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n            opacity : props.show ? 1 : 0\r\n        }}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Modal;","import React from 'react';\r\nimport { usePromiseTracker } from \"react-promise-tracker\";\r\nimport Loader from 'react-loader-spinner'\r\nimport Modal from './Modal';\r\n\r\nfunction LoadingIndicator (){\r\n\r\n  const { promiseInProgress } = usePromiseTracker({delay:500});\r\n\r\n  return(\r\n    promiseInProgress && (\r\n      <div\r\n        style={{position: \"fixed\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\"\r\n        }}\r\n      >\r\n      <Modal show=\"true\">\r\n         <Loader type=\"ThreeDots\" color=\"#6495ED\" height=\"100\" width=\"100\" />    \r\n      </Modal>\r\n        \r\n      </div>)\r\n    \r\n  );\r\n}\r\n\r\nexport default LoadingIndicator;","import React, {useRef, useEffect, Component, useCallback} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Container from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport SourceLpn from './SourceLpn';\r\nimport Item from './Item';\r\nimport { CardMedia } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport PutawayTote from './PutawayTote';\r\nimport LoadingIndicator from './LoadingIndicator'\r\nimport {useGlobalState} from '../App';\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n            marginRight: 8,\r\n            \"& .MuiInputBase-root.Mui-disabled\": {\r\n            color: \"rgba(0, 0, 0, 1)\" // (default alpha is 0.38)\r\n            }\r\n        }\r\n    });\r\n\r\nconst Decanting = React.memo(() => {\r\n\r\n    const [state, dispatch] = useGlobalState();\r\n\r\n\r\n    return (\r\n        <Container >\r\n            <Grid item xs={10}>\r\n                <SourceLpn tabIndex='0'/>\r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={2}>\r\n                    <Box sx={{m:1, pt:1}}>\r\n                        \r\n                    <CardMedia width=\"250\" height=\"250\" component='img' src={state.itemImage} />\r\n                    </Box>\r\n                </Grid>    \r\n\r\n                <Grid item xs={3}>\r\n                   <Item tabIndex='1'/>\r\n\r\n                    <TextField\r\n                        id=\"item-description\"\r\n                        label=\"Item Description\"\r\n                        style={{ margin: 8}}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        value={state.itemDescription}\r\n                        disabled\r\n                    />\r\n\r\n                    <TextField\r\n                        id=\"pick-zone\"\r\n                        label=\"Designated Pick Zone\"\r\n                        style={{ margin: 8 }}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        value={state.destinationZone}\r\n                        disabled\r\n                       \r\n                    />\r\n\r\n                    <TextField\r\n                        id=\"wrapping-type\"\r\n                        label=\"Wrapping Type\"\r\n                        style={{ margin: 8 }}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        disabled\r\n                        value={state.wrappingType}\r\n                       \r\n                    />\r\n\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <TextField\r\n                        id=\"total-units\"\r\n                        label=\"Total Units\"\r\n                        style={{ margin: 8 }}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        value={state.totalUnits}\r\n                        disabled\r\n                       \r\n                    />\r\n\r\n                    <TextField\r\n                        id=\"num-of-lbls\"\r\n                        label=\"Number of Labels To Print\"\r\n                        style={{ margin: 8 }}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        value =\"2\"\r\n                        tabIndex = \"-1\"\r\n                    />\r\n\r\n    \r\n\r\n                    <PutawayTote  />\r\n       \r\n\r\n                    <TextField\r\n                        id=\"actual-tote-wt\"\r\n                        label=\"Actual Tote Weight\"\r\n                        style={{ margin: 8 }}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        value={state.assetWgt}\r\n                        disabled\r\n                       \r\n                    />\r\n                </Grid>\r\n                \r\n                <Grid item xs={2}>\r\n                    <TextField\r\n                        id=\"untcas\"\r\n                        label=\"Units Per Case\"\r\n                        style={{ margin: 8 }}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        value={state.untcas}\r\n                        disabled\r\n                       \r\n                    />\r\n        \r\n                    <Box sx={{m:1, pt:1}} >\r\n                        <Button variant=\"outlined\" color=\"primary\" size=\"large\" >\r\n                            Print\r\n                        </Button>\r\n                    </Box>\r\n                    <Box sx={{m:0.6 , pt:0.1}}>\r\n\r\n                    </Box>\r\n\r\n                    <TextField\r\n                        id=\"units-per-tote\"\r\n                        name=\"unitsPerTote\"\r\n                        label=\"Suggested Units Per Tote\"\r\n                        style={{ margin: 8, cursor: 'text'}}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        value={state.suggestedToteMax}\r\n                        \r\n                    />\r\n\r\n                    <FormLabel component=\"legend\">Tote Level</FormLabel>\r\n                    <RadioGroup row aria-label=\"Tote Level\" name=\"tote-level\">\r\n                        <FormControlLabel value=\"0\" control={<Radio color=\"primary\" />} label=\"Partial\" />\r\n                        <FormControlLabel value=\"1\" control={<Radio color=\"primary\" />} label=\"Full\" />\r\n                    </RadioGroup>\r\n    \r\n                </Grid>          \r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={8}>\r\n                <LoadingIndicator/>\r\n                <TextField \r\n                        id=\"destination-lpn\"\r\n                        label=\"Destination Pallet LPN\"\r\n                        style={{ margin: 8 }}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        required\r\n                    />\r\n\r\n                <TextField \r\n                        id=\"decanting-instructions\"\r\n                        label=\"Decanting Instructions\"\r\n                        style={{ margin: 8 }}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        value={state.decantingInstructions}\r\n                    />\r\n\r\n                <TextField \r\n                        id=\"special-instructions\"\r\n                        label=\"Special Instructions\"\r\n                        style={{ margin: 8 }}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        value={state.specialInstructions}\r\n                        \r\n                    />\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <Box sx={{m:1 , pt:1}}>\r\n                        <Button variant=\"outlined\" color=\"primary\" size=\"large\" >\r\n                            Confirm\r\n                        </Button>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n        )\r\n    }\r\n\r\n);\r\n\r\nexport default Decanting;","import './App.css';\nimport Decanting from './Components/Decanting'\nimport * as React from \"react\";\n\nconst initialGlobalState = {\n  lodnum:'',\n  lodnumError: false,\n  item:'',\n  itemError :false,\n  itemDescription:'',\n  itemImage:'',\n  untcas:'',\n  totalUnits:'',\n  destinationZone:'',\n  suggestedTote:'',\n  suggestedToteMax:'',\n  assetWgt:'',\n  wrappingType:'',\n  decantingInstructions:'',\n  specialInstructions:''\n};\n\nexport const GlobalStateContext = React.createContext(initialGlobalState);\nexport const DispatchStateContext = React.createContext(undefined);\n\n/**\n* Global State provider & hooks\n*/\nexport const GlobalStateProvider = ({ children }) => {\nconst [state, dispatch] = React.useReducer(\n(state, newValue) => ({ ...state, ...newValue }),\ninitialGlobalState\n);\nreturn (\n<GlobalStateContext.Provider value={state}>\n<DispatchStateContext.Provider value={dispatch}>\n{children}\n</DispatchStateContext.Provider>\n</GlobalStateContext.Provider>\n);\n};\n\nexport const useGlobalState = () => [\nReact.useContext(GlobalStateContext),\nReact.useContext(DispatchStateContext)\n];\n\nexport const App = () =>{\n\n  return (\n    <GlobalStateProvider>\n      <div className=\"App\">\n        <Decanting />\n      </div>\n    </GlobalStateProvider>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}