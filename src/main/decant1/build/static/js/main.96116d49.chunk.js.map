{"version":3,"sources":["Services/AuthApi.js","Components/SourceLpn.js","Components/Item.js","Components/PutawayTote.js","Components/Decanting.js","App.js","reportWebVitals.js","index.js"],"names":["AuthApi","React","createContext","SourceLpn","props","onLodnumStateChange","useState","errorState","errorText","onChange","pristine","touched","value","lodnumState","setLodnumState","lodnumInputRef","useRef","validateSourceLpn","useContext","srclpn","axios","get","headers","withCredentials","credentials","then","response","console","log","JSON","stringify","data","lodnum","updatedState","catch","error","TextField","id","label","style","margin","fullWidth","InputLabelProps","shrink","variant","onBlur","e","target","helperText","required","ref","Item","onItemStateChange","itemDescription","itemImage","untcas","totalUnits","destinationZone","suggestedTote","suggestedToteMax","itemState","setItemState","validateItem","item","prtnum","item_description","img_src","total_units","movement_zone","tote","suggested_max_units","PutawayTote","selectedTote","setSelectedTote","FormControl","minWidth","InputLabel","Select","labelId","toteDesc","map","MenuItem","Decanting","handleLodnumStateChange","setState","state","lodnumError","handleItemStateChange","itemError","ustcas","classes","this","Container","Grid","xs","container","spacing","Box","m","pt","CardMedia","width","height","component","src","disabled","className","root","Button","color","size","FormLabel","RadioGroup","row","aria-label","name","FormControlLabel","control","Radio","multiline","Component","withStyles","theme","marginRight","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96116d49.chunk.js","sourcesContent":["import React from 'react';\r\nconst AuthApi = React.createContext();\r\nexport default AuthApi;","import React, {useEffect, useRef, useState} from 'react';\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AuthApi from '../Services/AuthApi'\r\nimport Cookies from 'js-cookie';\r\n\r\nfunction SourceLpn (props) {\r\n\r\n    /*const [lodnum, setLodnum] = useState(\"\");\r\n    const [errorState, setErrorState] = useState();\r\n    const [errorText, setErrorText] = useState(\"\");*/\r\n\r\n    const { onLodnumStateChange } = props;\r\n\r\n    const [lodnumState, setLodnumState] = useState({\r\n        errorState: false,\r\n        errorText:\"\",\r\n        onChange: false,\r\n        pristine: true,\r\n        touched: false,\r\n        value: null\r\n      });\r\n    \r\n   const lodnumInputRef = useRef(null);\r\n\r\n  /*  useEffect(() =>{\r\n        console.log(lodnumState.errorState);\r\n        if(lodnumState.errorState){\r\n            console.log(lodnumInputRef);\r\n            lodnumInputRef.current.focus();\r\n        }  \r\n    },[lodnumState.errorState]);*/\r\n\r\n    const Auth = React.useContext(AuthApi);\r\n\r\n    const handleSourceLpnChange = e => {\r\n        validateSourceLpn(e.target.value );\r\n    }\r\n\r\n    const validateSourceLpn = (srclpn) => {\r\n        axios.get('/decanting/ws/cws/tosgGetInventoryIdentifierDetails?srclpn=' + srclpn,{\r\n            headers : {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'Access-Control-Allow-Origin' : 'http://localhost:3000',\r\n                'Access-Control-Allow-Credentials' : true\r\n            },withCredentials: true ,\r\n            credentials: 'include',\r\n        }).then((response) =>{\r\n            debugger;\r\n             console.log(\"8080 response \" +JSON.stringify(response.data));\r\n              if(response.data.response.lodnum === srclpn){\r\n               /* setLodnum(response.data.data.lodnum);\r\n                setErrorState(false);\r\n                setErrorText(\"\");*/\r\n                const updatedState = {\r\n                    ...lodnumState,\r\n                    errorState: false,\r\n                    errorText:\"\",\r\n                    onChange: false,\r\n                    pristine: false,\r\n                    touched: true,\r\n                    value: response.data.response.lodnum\r\n                  };\r\n\r\n                  setLodnumState(updatedState);\r\n                  onLodnumStateChange(updatedState);\r\n    \r\n                }else{\r\n                    /*setLodnum(srclpn);\r\n                    setErrorState(true);\r\n                    setErrorText(\"Invalid Source Pallet LPN\");*/\r\n\r\n                    const updatedState = {\r\n                        ...lodnumState,\r\n                        errorState: true,\r\n                        errorText:\"Invalid Source Pallet LPN\",\r\n                        onChange: true,\r\n                        pristine: false,\r\n                        touched: true,\r\n                        value: srclpn\r\n                      };\r\n\r\n                    setLodnumState(updatedState);\r\n                    onLodnumStateChange(updatedState);\r\n                }\r\n                \r\n                })\r\n            .catch((error) => {\r\n                debugger;\r\n                   /* setLodnum(srclpn);\r\n                    setErrorState(true);\r\n                    setErrorText(\"Invalid Source Pallet LPN\");*/\r\n\r\n                    const updatedState = {\r\n                        ...lodnumState,\r\n                        errorState: true,\r\n                        errorText:\"Invalid Source Pallet LPN\",\r\n                        onChange: true,\r\n                        pristine: false,\r\n                        touched: true,\r\n                        value: srclpn\r\n                      };\r\n\r\n                      setLodnumState(updatedState);\r\n                      onLodnumStateChange(updatedState);\r\n\r\n                    // Cookies.set(\"user\", \"loginfalse\");\r\n                    // if(error.response.status===401){\r\n                    //     Auth.setAuth(false);\r\n                    //     Cookies.remove(\"user\");\r\n                    // }\r\n                });\r\n\r\n    };\r\n\r\n        return(\r\n            <TextField\r\n                    id=\"srclpn\"\r\n                    label=\"Source Pallet LPN\"\r\n                    style={{ margin: 8 }}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    onBlur={handleSourceLpnChange}\r\n                    error={lodnumState.errorState}\r\n                    helperText={lodnumState.errorText}\r\n                    required\r\n                    ref={lodnumInputRef}\r\n\r\n                />\r\n        )\r\n}\r\n\r\nexport default SourceLpn;","import React, {useEffect, useRef, useState} from 'react';\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AuthApi from '../Services/AuthApi'\r\nimport Cookies from 'js-cookie';\r\n\r\nfunction Item (props) {\r\n\r\n    const { onItemStateChange } = props;\r\n\r\n    const [itemState, setItemState] = useState({\r\n        errorState: false,\r\n        errorText:\"\",\r\n        onChange: false,\r\n        pristine: true,\r\n        touched: false,\r\n        value: null,\r\n        itemDescription: \"\",\r\n        itemImage:\"\",\r\n        untcas:\"\",\r\n        totalUnits:\"\",\r\n        destinationZone:\"\",\r\n        suggestedTote : \"\",\r\n        suggestedToteMax:\"\",\r\n\r\n      });\r\n\r\n    const Auth = React.useContext(AuthApi);\r\n\r\n\r\n    const handleItemChange =e =>{\r\n        if(e.target.value!=\"\"){\r\n          validateItem(e.target.value);\r\n        }\r\n    }\r\n\r\n    const validateItem = (item) =>{\r\n        axios.get('/decanting/ws/cws/tosgGetItemQtyOnLodnum?lodnum=' + props.lodnum +'&prtnum='+ item +'&wh_id=WIAW',{\r\n            headers : {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'Access-Control-Allow-Origin' : 'http://localhost:3000',\r\n                'Access-Control-Allow-Credentials' : true\r\n            },withCredentials: true ,\r\n            credentials: 'include',\r\n        }).then((response) =>{\r\n            console.log(\"response for itemjs\" + JSON.stringify(response.data.response));\r\n            debugger;\r\n              if(response.data.response.prtnum ){\r\n                const updatedState = {\r\n                    ...itemState,\r\n                    errorState: false,\r\n                    errorText:\"\",\r\n                    onChange: false,\r\n                    pristine: false,\r\n                    touched: true,\r\n                    value: response.data.response.prtnum,\r\n                    itemDescription: response.data.response.item_description,\r\n                    itemImage:response.data.response.img_src,\r\n                    untcas : response.data.response.untcas,\r\n                    totalUnits: response.data.response.total_units,\r\n                    destinationZone: response.data.response.movement_zone,\r\n                    suggestedTote: response.data.response.tote,\r\n                    suggestedToteMax: response.data.response.suggested_max_units\r\n                  };\r\n\r\n                  setItemState(updatedState);\r\n                  onItemStateChange(updatedState);\r\n    \r\n                }else{\r\n                    /*setLodnum(srclpn);\r\n                    setErrorState(true);\r\n                    setErrorText(\"Invalid Source Pallet LPN\");*/\r\n                    console.log(\"ERROR ELSE PART\");\r\n                    const updatedState = {\r\n                        ...itemState,\r\n                        errorState: true,\r\n                        errorText:\"Invalid Item\",\r\n                        onChange: true,\r\n                        pristine: false,\r\n                        touched: true,\r\n                        value: item,\r\n                        itemDescription:\"\",\r\n                        untcas:\"\",\r\n                        totalUnits:\"\",\r\n                        destinationZone:\"\",\r\n                        suggestedTote : \"\",\r\n                        suggestedToteMax:\"\",\r\n                      };\r\n\r\n                    setItemState(updatedState);\r\n                    onItemStateChange(updatedState);\r\n                }\r\n                \r\n                })\r\n            .catch((error) => {\r\n                console.log(\"ERROR CATCH PART\" + error);\r\n                const updatedState = {\r\n                    ...itemState,\r\n                    errorState: true,\r\n                    errorText:\"Invalid Item\",\r\n                    onChange: true,\r\n                    pristine: false,\r\n                    touched: true,\r\n                    value: item,\r\n                    itemDescription:\"\",\r\n                    untcas:\"\",\r\n                    totalUnits:\"\",\r\n                    destinationZone:\"\",\r\n                    suggestedTote : \"\",\r\n                    suggestedToteMax:\"\",\r\n                  };\r\n                \r\n                  setItemState(updatedState);\r\n                  onItemStateChange(updatedState);\r\n\r\n                /* if (error.response) {\r\n                   setLodnum(srclpn);\r\n                    setErrorState(true);\r\n                    setErrorText(\"Invalid Source Pallet LPN\");\r\n\r\n                    Cookies.set(\"user\", \"loginfalse\");\r\n                     if(error.response.status===401){\r\n                         Auth.setAuth(false);\r\n                        Cookies.remove(\"user\");\r\n                     }\r\n                  }*/\r\n                });\r\n\r\n    }\r\n\r\n    return(\r\n        <TextField\r\n        id=\"item\"\r\n        label=\"Item\"\r\n        style={{ margin: 8 }}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        InputLabelProps={{\r\n            shrink: true,\r\n        }}\r\n        variant=\"outlined\"\r\n        required\r\n        onBlur={handleItemChange}\r\n        error={itemState.errorState}\r\n        helperText={itemState.errorText}\r\n\r\n    />\r\n\r\n    );\r\n}\r\n\r\nexport default Item;","import React, {useState, createRef, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\n\r\nfunction PutawayTote (props) {\r\n\r\n  const[suggestedTote, setSuggetedTote] = useState(\"\");\r\n  const[selectedTote, setSelectedTote] = useState(\"\");\r\n  let allPutawayTotes = [\r\n    {\r\n      id:\"AUTOSTORE\",\r\n      toteDesc: \"Autostore Tote\"\r\n    },\r\n    {\r\n      id:\"REGULAR\",\r\n      toteDesc: \"Regular Tote\"\r\n    }\r\n\r\n  ]\r\n\r\n  const handelPutatwayToteChange = (e) => {\r\n    setSelectedTote(e.target.value)\r\n  }\r\n        return (\r\n            <FormControl variant=\"outlined\" style={{margin:8, minWidth: 270}}>\r\n            <InputLabel id=\"suggested-tote-label\">Suggested Tote</InputLabel>\r\n                <Select\r\n                labelId=\"suggested-tote-label\"\r\n                id=\"suggested-tote\"\r\n                label=\"Suggested Tote*\"\r\n                value={selectedTote}\r\n                onChange={handelPutatwayToteChange}\r\n                >\r\n                  {allPutawayTotes.map(tote => {\r\n                      return(\r\n                        <MenuItem key={tote.id} value={tote.toteDesc}> {tote.toteDesc} </MenuItem>\r\n                      )\r\n                  })\r\n\r\n                  }\r\n                </Select>\r\n            </FormControl>\r\n        );\r\n\r\n}\r\n\r\nexport default PutawayTote;\r\n\r\n","import React, {Component} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Container from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport SourceLpn from './SourceLpn';\r\nimport Item from './Item';\r\nimport { CardMedia } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport PutawayTote from './PutawayTote';\r\n\r\n  const useStyles = theme => ({\r\n    root: {\r\n            marginRight: 8,\r\n            \"& .MuiInputBase-root.Mui-disabled\": {\r\n            color: \"rgba(0, 0, 0, 0.9)\" // (default alpha is 0.38)\r\n            }\r\n        }\r\n    });\r\n\r\n  \r\nclass Decanting extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            lodnum:'',\r\n            lodnumError: false,\r\n            item:'',\r\n            itemError :false,\r\n            itemDescription:'',\r\n            itemImage:'',\r\n            ustcas:'',\r\n            totalUnits:'',\r\n            destinationZone:'',\r\n            suggestedTote : '',\r\n            suggestedToteMax:'',\r\n        }\r\n    }\r\n\r\n    handleLodnumStateChange =(updatedState) => {\r\n        console.log(\"updatedState: \", updatedState);\r\n        this.setState({\r\n            ...this.state,\r\n            lodnum: updatedState.value,\r\n            lodnumError: updatedState.error    \r\n        });\r\n\r\n        console.log(this.state.lodnum);\r\n    }\r\n\r\n    handleItemStateChange = (updatedState) => {\r\n        console.log(\"updatedState for the ITEM STATE: \", updatedState);\r\n        this.setState({\r\n            ...this.state,\r\n            itemError:updatedState.error,\r\n            item:updatedState.value,\r\n            itemDescription:updatedState.itemDescription,\r\n            itemImage:updatedState.itemImage,\r\n            untcas:updatedState.untcas,\r\n            totalUnits:updatedState.totalUnits,\r\n            destinationZone:updatedState.destinationZone,\r\n            suggestedTote :updatedState.suggestedTote,\r\n            suggestedToteMax :updatedState.suggestedToteMax,\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n        return (\r\n        <Container >\r\n            <Grid item xs={10}>\r\n                <SourceLpn onLodnumStateChange={this.handleLodnumStateChange}/>\r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={2}>\r\n                    <Box m={1} pt={1}>\r\n                        \r\n                    <CardMedia width=\"250\" height=\"250\" component='img' src={this.state.itemImage} />\r\n                    </Box>\r\n                </Grid>    \r\n\r\n                <Grid item xs={3}>\r\n                   <Item {...this.state} onItemStateChange={this.handleItemStateChange}/>\r\n\r\n                    <TextField\r\n                        id=\"item-description\"\r\n                        label=\"Item Description\"\r\n                        style={{ margin: 8}}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        value={this.state.itemDescription}\r\n                        disabled\r\n                        className={classes.root}\r\n                    />\r\n\r\n                    <TextField\r\n                        id=\"pick-zone\"\r\n                        label=\"Designated Pick Zone\"\r\n                        style={{ margin: 8 }}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        value={this.state.destinationZone}\r\n                        disabled\r\n                        className={classes.root}\r\n                    />\r\n\r\n                    <TextField\r\n                        id=\"wrapping-type\"\r\n                        label=\"Wrapping Type\"\r\n                        style={{ margin: 8 }}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        className={classes.root}\r\n                    />\r\n\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <TextField\r\n                        id=\"total-units\"\r\n                        label=\"Total Units\"\r\n                        style={{ margin: 8 }}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        value={this.state.totalUnits}\r\n                        disabled\r\n                        className={classes.root}\r\n                    />\r\n\r\n                    <TextField\r\n                        id=\"num-of-lbls\"\r\n                        label=\"Number of Labels To Print\"\r\n                        style={{ margin: 8 }}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                    />\r\n\r\n    \r\n\r\n                    <PutawayTote />\r\n       \r\n\r\n                    <TextField\r\n                        id=\"actual-tote-wt\"\r\n                        label=\"Actual Tote Weight\"\r\n                        style={{ margin: 8 }}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                    />\r\n                </Grid>\r\n                \r\n                <Grid item xs={2}>\r\n                    <TextField\r\n                        id=\"untcas\"\r\n                        label=\"Units Per Case\"\r\n                        style={{ margin: 8 }}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        value={this.state.untcas}\r\n                        disabled\r\n                        className={classes.root}\r\n                    />\r\n        \r\n                    <Box m={1} pt={1}>\r\n                        <Button variant=\"outlined\" color=\"primary\" size=\"large\" >\r\n                            Print\r\n                        </Button>\r\n                    </Box>\r\n                    <Box m={1.7}>\r\n\r\n                    </Box>\r\n\r\n                    <TextField\r\n                        id=\"units-per-tote\"\r\n                        label=\"Suggested Units Per Tote\"\r\n                        style={{ margin: 8 }}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        value={this.state.suggestedToteMax}\r\n                        \r\n                    />\r\n\r\n                    <FormLabel component=\"legend\">Tote Level</FormLabel>\r\n                    <RadioGroup row aria-label=\"Tote Level\" name=\"tote-level\">\r\n                        <FormControlLabel value=\"0\" control={<Radio color=\"primary\" />} label=\"Partial\" />\r\n                        <FormControlLabel value=\"1\" control={<Radio color=\"primary\" />} label=\"Full\" />\r\n                    </RadioGroup>\r\n    \r\n                </Grid>          \r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={8}>\r\n                <TextField \r\n                        id=\"destination-lpn\"\r\n                        label=\"Destination Pallet LPN\"\r\n                        style={{ margin: 8 }}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        required\r\n                    />\r\n\r\n                <TextField \r\n                        id=\"decanting-instructions\"\r\n                        label=\"Decanting Instructions\"\r\n                        style={{ margin: 8 }}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                    />\r\n\r\n                <TextField \r\n                        id=\"special-instructions\"\r\n                        label=\"Special Instructions\"\r\n                        style={{ margin: 8 }}\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <Box m={1} pt={1}>\r\n                        <Button variant=\"outlined\" color=\"primary\" size=\"large\" >\r\n                            Confirm\r\n                        </Button>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n        )\r\n    }\r\n  }\r\n\r\n  export default withStyles(useStyles)(Decanting);\r\n\r\n","import './App.css';\nimport Decanting from './Components/Decanting'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <Decanting />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}